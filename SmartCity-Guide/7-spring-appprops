7)Τώρα ας δημιουργήσουμε το application.properties για Spring Boot:
---
# ===================================================
# Smart City IMS - Spring Boot Configuration
# ===================================================

# Application
spring.application.name=smart-city-ims
server.port=8081

# PostgreSQL Database Configuration
spring.datasource.url=jdbc:postgresql://localhost:5432/smartcity
spring.datasource.username=smartcity_user
spring.datasource.password=SmartCity2024!
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA/Hibernate
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.jdbc.batch_size=20
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true

# Connection Pool (HikariCP)
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.max-lifetime=1800000

# Redis Cache Configuration
spring.data.redis.host=localhost
spring.data.redis.port=6379
spring.data.redis.password=RedisPass2024!
spring.data.redis.timeout=60000
spring.cache.type=redis
spring.cache.redis.time-to-live=600000

# Kafka Configuration (for event publishing)
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.consumer.group-id=smart-city-backend
spring.kafka.consumer.auto-offset-reset=latest

# Logging
logging.level.root=INFO
logging.level.com.smartcity.ims=DEBUG
logging.level.org.springframework.web=INFO
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n
logging.file.name=logs/smart-city-ims.log

# Actuator (Monitoring)
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.health.show-details=always
management.metrics.export.prometheus.enabled=true

# CORS
spring.web.cors.allowed-origins=*
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.web.cors.allowed-headers=*

# Azure Application Insights (Production)
# azure.application-insights.instrumentation-key=${APPINSIGHTS_KEY}

# Profile-specific configurations
spring.profiles.active=dev

# ===================================================
# Development Profile (application-dev.properties)
# ===================================================
# spring.jpa.show-sql=true
# logging.level.org.hibernate.SQL=DEBUG

# ===================================================
# Production Profile (application-prod.properties)
# ===================================================
# spring.datasource.url=${AZURE_POSTGRESQL_URL}
# spring.data.redis.host=${AZURE_REDIS_HOST}
# spring.kafka.bootstrap-servers=${AZURE_KAFKA_SERVERS}
---
